{"version":3,"file":"static/js/985.776b0368.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","components/Loader/Loader.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from 'react';\n// import { nanoid } from 'nanoid';\nimport css from 'components/ContactForm/ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectorContact } from 'redux/selector';\nimport { fetchContactAdd } from 'redux/contacts/operations';\nimport { Button } from '@mui/material';\n\nexport function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n  const contacts = useSelector(selectorContact);\n\n  const newContact = {\n    name,\n    number,\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (contacts.find(contact => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(fetchContactAdd(newContact));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit} className={css.form}>\n      <label htmlFor=\"\">Name</label>\n      <input\n        className={css.input}\n        onChange={changeInput}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <label htmlFor=\"\">Number</label>\n      <input\n        className={css.input}\n        onChange={changeInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n      />\n      <Button type=\"submit\" variant=\"contained\" fullWidth={false}>\n        Add contact\n      </Button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { fetchContactDel } from 'redux/contacts/operations';\nimport { selectorContact, selectorFilter } from 'redux/selector';\nimport css from 'components/ContactList//ContactList.module.css';\nimport { Button } from '@mui/material';\n\nexport function ContactList() {\n  const contacts = useSelector(selectorContact);\n  const dispatch = useDispatch();\n  const woldFilter = useSelector(selectorFilter);\n\n  const isDelete = code => {\n    dispatch(fetchContactDel(code));\n  };\n  // console.log(contacts);\n  const contactsAfterFiltr = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(woldFilter)\n  );\n  // console.log(contactsAfterFiltr);\n\n  if (contactsAfterFiltr.length === 0) {\n    return <p>Not contacts</p>;\n  }\n  return (\n    <ul className={css.list}>\n      {contactsAfterFiltr.map(({ id, name, phone }) => {\n        return (\n          <li key={id} className={css.item}>\n            <span>\n              {name} : {phone}\n            </span>\n            <Button\n              variant=\"contained\"\n\t\t\t\t  size=\"small\"\n              type=\"button\"\n              onClick={() => {\n                isDelete(id);\n              }}\n            >\n              Delete\n            </Button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\"};","import { useDispatch } from 'react-redux';\nimport { addFilter } from 'redux/filterSlice';\nimport css from 'components/Filter/Filter.module.css';\n\nexport function Filter({ isFilter }) {\n  const dispatch = useDispatch();\n  const changeInput = e => {\n    const wordFilter = e.currentTarget.value.trim();\n    dispatch(addFilter(wordFilter.toLowerCase()));\n  };\n  return (\n    <div className={css.filter}>\n      <label htmlFor=\"\">Find contacts by name</label>\n      <input type=\"text\" onChange={changeInput} />\n    </div>\n  );\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__gVK0J\"};","import { BallTriangle } from 'react-loader-spinner';\n\nexport function Loader() {\n  return (\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"#4fa94d\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperClass={{}}\n      wrapperStyle=\"\"\n      visible={true}\n    />\n  );\n}\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport css from './Contacts.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectorContactLoader } from 'redux/selector';\nimport { Loader } from 'components/Loader/Loader';\nimport { useAuth } from 'hooks/useAuth';\nimport { Navigate } from 'react-router-dom';\n\nexport default function Contacts () {\n  const dispatch = useDispatch();\n  const loader = useSelector(selectorContactLoader);\n  const { isLoggedIn } = useAuth();\n  //   const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  //   const addContact = contact => {\n  //     setContacts(prevState => {\n  //       return [contact, ...prevState];\n  //     });\n  //   };\n\n  //   const deleteContact = code => {\n  //     //  console.log(code);\n  //     setContacts(prevState => {\n  //       return prevState.filter(({ id }) => id !== code);\n  //     });\n  //   };\n  //   const isFilterContacts = wordFilter => {\n  //     //  console.log(wordFilter);\n  //     setFilter(wordFilter.toLowerCase());\n  //   };\n\n  //   const contactsAfterFiltr = contacts.filter(({ name }) => {\n  //     return name.toLowerCase().includes(filter);\n  //   });\n  if (!isLoggedIn) {\n\treturn <Navigate to=\"/\" replace />;\n }\n  return (\n    <section className={css.contacts}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {loader && <Loader />}\n      {/* {contactsAfterFiltr.length === 0 ? (\n        <p>Not contacts</p>\n      ) : ( */}\n      {!loader && <ContactList />}\n    </section>\n  );\n}\n"],"names":["ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","changeInput","e","currentTarget","value","contacts","useSelector","selectorContact","newContact","action","onSubmit","preventDefault","find","contact","alert","fetchContactAdd","className","css","htmlFor","onChange","type","pattern","title","required","Button","variant","fullWidth","ContactList","woldFilter","selectorFilter","contactsAfterFiltr","filter","toLowerCase","includes","length","map","id","phone","size","onClick","code","fetchContactDel","Filter","isFilter","wordFilter","trim","addFilter","Loader","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Contacts","loader","selectorContactLoader","isLoggedIn","useAuth","useEffect","fetchContacts","to","replace"],"sourceRoot":""}