{"version":3,"file":"static/js/427.6d70ce5e.chunk.js","mappings":"+SAQe,SAASA,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KAAfD,WAEFE,EAAU,CACdR,MAAAA,EACAE,SAAAA,GASF,OAAII,GACK,SAAC,KAAD,CAAUG,GAAG,YAAYC,SAAO,KAGvC,UAAC,IAAD,CACEC,UAAU,OACVC,SAbyB,SAAAC,GAC3BA,EAAEC,iBACFV,GAASW,EAAAA,EAAAA,aAAYP,IACvBP,EAAS,IACTE,EAAY,GACX,EASGa,GAAI,CACFC,MAAO,IACPC,EAAG,OACH,kBAAmB,CAAEA,EAAG,IAN5B,WASE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYC,QAAQ,iBAApB,oBACA,SAAC,IAAD,CACEC,UAAQ,EACRC,KAAK,QACLC,GAAG,iBACHC,MAAOvB,EACPwB,SAAU,SAAAX,GAAC,OAAIZ,EAASY,EAAEY,OAAOF,MAAtB,EACXG,MAAM,cAGV,UAAC,IAAD,YACE,SAAC,IAAD,CAAYP,QAAQ,0BAApB,uBACA,SAAC,IAAD,CACEC,UAAQ,EACRC,KAAK,WACLM,aAAa,mBACbL,GAAG,0BACHC,MAAOrB,EACPsB,SAAU,SAAAX,GAAC,OAAIV,EAAYU,EAAEY,OAAOF,MAAzB,EACXG,MAAM,iBAGV,SAAC,IAAD,CAAQE,QAAQ,YAAYP,KAAK,SAAjC,wBAKL,C","sources":["pages/Login/Login.jsx"],"sourcesContent":["import { Box, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { useAuth } from 'hooks/useAuth';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { loginOnUser } from 'redux/user/operations';\n\nexport default function Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useAuth();\n\n  const newUser = {\n    email,\n    password,\n  };\n  const isSubmitUserRegister = e => {\n    e.preventDefault();\n    dispatch(loginOnUser(newUser));\n\t setEmail('')\n\t setPassword('');\n  };\n  \n  if (isLoggedIn) {\n    return <Navigate to=\"/contacts\" replace />;\n  }\n    return (\n    <Box\n      component=\"form\"\n      onSubmit={isSubmitUserRegister}\n      sx={{\n        width: 300,\n        m: 'auto',\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <FormControl>\n        <InputLabel htmlFor=\"outlined-email\">Email</InputLabel>\n        <OutlinedInput\n          required\n          type=\"email\"\n          id=\"outlined-email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          label=\"Email\"\n        />\n      </FormControl>\n      <FormControl>\n        <InputLabel htmlFor=\"outlined-password-input\">Password</InputLabel>\n        <OutlinedInput\n          required\n          type=\"password\"\n          autoComplete=\"current-password\"\n          id=\"outlined-password-input\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          label=\"Password\"\n        />\n      </FormControl>\n      <Button variant=\"contained\" type=\"submit\">\n        Login on\n      </Button>\n    </Box>\n  );\n}\n"],"names":["Login","useState","email","setEmail","password","setPassword","dispatch","useDispatch","isLoggedIn","useAuth","newUser","to","replace","component","onSubmit","e","preventDefault","loginOnUser","sx","width","m","htmlFor","required","type","id","value","onChange","target","label","autoComplete","variant"],"sourceRoot":""}