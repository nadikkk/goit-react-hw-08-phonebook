{"version":3,"file":"static/js/643.7b877e4c.chunk.js","mappings":"+SAQe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,KAAfD,WAEJE,EAAU,CACfV,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GASC,OAAII,GACE,SAAC,KAAD,CAAUG,GAAG,YAAYC,SAAO,KAGpC,UAAC,IAAD,CACEC,UAAU,OACdC,SAb6B,SAACC,GAC/BA,EAAEC,iBACFV,GAASW,EAAAA,EAAAA,cAAaP,IACtBT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACV,EAQGa,GAAI,CACPC,MAAO,IACPC,EAAG,OACE,kBAAmB,CAAEA,EAAG,IAN5B,WASE,UAAC,IAAD,YACE,SAAC,IAAD,CAAYC,QAAQ,qBAApB,mBACA,SAAC,IAAD,CACJC,UAAQ,EACRC,KAAK,OACCC,GAAG,qBACHC,MAAOzB,EACZ0B,SAAU,SAACX,GAAD,OAAKd,EAAQc,EAAEY,OAAOF,MAAtB,EACLG,MAAM,aAGd,UAAC,IAAD,YACM,SAAC,IAAD,CAAYP,QAAQ,iBAApB,oBACA,SAAC,IAAD,CACJC,UAAQ,EACRC,KAAK,QACCC,GAAG,iBACHC,MAAOvB,EACZwB,SAAU,SAACX,GAAD,OAAKZ,EAASY,EAAEY,OAAOF,MAAvB,EACLG,MAAM,cAGd,UAAC,IAAD,YACM,SAAC,IAAD,CAAYP,QAAQ,0BAApB,uBACA,SAAC,IAAD,CACJC,UAAQ,EACRC,KAAK,WACLM,aAAa,mBACPL,GAAG,0BACHC,MAAOrB,EACZsB,SAAU,SAACX,GAAD,OAAKV,EAAYU,EAAEY,OAAOF,MAA1B,EACLG,MAAM,iBAGV,SAAC,IAAD,CAAQE,QAAQ,YAAYP,KAAK,SAAjC,wBAGL,C","sources":["pages/Register/Register.jsx"],"sourcesContent":["import { Box, FormControl, InputLabel, OutlinedInput } from '@mui/material';\nimport Button from '@mui/material/Button';\nimport { useAuth } from 'hooks/useAuth';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { registerUser } from 'redux/user/operations';\n\nexport default function Register() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useAuth();\n//   console.log(location);\nconst newUser = {\n\tname,\n\temail,\n\tpassword,\n}\n  const isSubmitUserRegister = (e) => {\n\te.preventDefault();\n\tdispatch(registerUser(newUser))\n\tsetName('');\n\tsetEmail('');\n\tsetPassword('');\n  }\n  if (isLoggedIn) {\n\treturn <Navigate to=\"/contacts\" replace />;\n }\n  return (\n    <Box\n      component=\"form\"\n\t\tonSubmit={isSubmitUserRegister}\n      sx={{\n\t\t\twidth: 300,\n\t\t\tm: 'auto',\n        '& > :not(style)': { m: 2 },\n      }}\n    >\n      <FormControl>\n        <InputLabel htmlFor=\"component-outlined\">Name</InputLabel>\n        <OutlinedInput\n\t\t  required\n\t\t  type=\"text\"\n          id=\"component-outlined\"\n          value={name}\n\t\t\t  onChange={(e)=>setName(e.target.value)}\n          label=\"Name\"\n        />\n      </FormControl>\n\t\t<FormControl>\n        <InputLabel htmlFor=\"outlined-email\">Email</InputLabel>\n        <OutlinedInput\n\t\t  required\n\t\t  type='email'\n          id=\"outlined-email\"\n          value={email}\n\t\t\t  onChange={(e)=>setEmail(e.target.value)}\n          label=\"Email\"\n        />\n      </FormControl>\n\t\t<FormControl>\n        <InputLabel htmlFor=\"outlined-password-input\">Password</InputLabel>\n        <OutlinedInput\n\t\t  required\n\t\t  type=\"password\"\n\t\t  autoComplete=\"current-password\"\n          id=\"outlined-password-input\"\n          value={password}\n\t\t\t  onChange={(e)=>setPassword(e.target.value)}\n          label=\"Password\"\n        />\n      </FormControl>\n      <Button variant=\"contained\" type=\"submit\">Register</Button>\n    </Box>\n  );\n}\n"],"names":["Register","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","isLoggedIn","useAuth","newUser","to","replace","component","onSubmit","e","preventDefault","registerUser","sx","width","m","htmlFor","required","type","id","value","onChange","target","label","autoComplete","variant"],"sourceRoot":""}